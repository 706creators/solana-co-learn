<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>All in One Solana Blog</title>
        <link>https://www.all-in-one-blockchain.xyz/blog</link>
        <description>All in One Solana Blog</description>
        <lastBuildDate>Wed, 27 Sep 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[什么是Phoenix？]]></title>
            <link>https://www.all-in-one-blockchain.xyz/blog/what-is-Phoenix</link>
            <guid>https://www.all-in-one-blockchain.xyz/blog/what-is-Phoenix</guid>
            <pubDate>Wed, 27 Sep 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Phoenix是Solana上的去中心化限价订单簿，支持现货资产市场。]]></description>
            <content:encoded><![CDATA[<p>Phoenix是Solana上的去中心化限价订单簿，支持现货资产市场。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="why">Why<a href="#why" class="hash-link" aria-label="Direct link to Why" title="Direct link to Why">​</a></h2><p>可组合的流动性中心是DeFi的公共产品。开发者可以构建其他链上应用，将流动性发布到或从规范的流动性来源中提取流动性。</p><h2></h2><ul><li></li></ul>]]></content:encoded>
            <category>blog</category>
            <category>blockchain</category>
            <category>solana</category>
            <category>Phoenix</category>
        </item>
        <item>
            <title><![CDATA[什么是Anchor？]]></title>
            <link>https://www.all-in-one-blockchain.xyz/blog/what-is-anchor</link>
            <guid>https://www.all-in-one-blockchain.xyz/blog/what-is-anchor</guid>
            <pubDate>Tue, 26 Sep 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[今天，开始我们学习从Solana上开发智能合约，这里我打算先从Anchor开始。因为Anchor也是Solana上现在如今用的最多的开发框架，哦，这里主要用的也是Rust语言，对于Anchor还支持的Solidity语法来写合约，暂时我先不考虑。也希望有🧍‍♂️能一起完善。]]></description>
            <content:encoded><![CDATA[<p>今天，开始我们学习从Solana上开发智能合约，这里我打算先从Anchor开始。因为Anchor也是Solana上现在如今用的最多的开发框架，哦，这里主要用的也是Rust语言，对于Anchor还支持的Solidity语法来写合约，暂时我先不考虑。也希望有🧍‍♂️能一起完善。</p><p>那今天就简单的介绍下Anchor上如何从项目的初始化，到后面如何部署合约以及前端如何来调用这个简单的Example合约。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="先来介绍下什么是anchor吧">先来介绍下什么是Anchor吧<a href="#先来介绍下什么是anchor吧" class="hash-link" aria-label="Direct link to 先来介绍下什么是Anchor吧" title="Direct link to 先来介绍下什么是Anchor吧">​</a></h2><p>这里我先引用下官方的介绍</p><blockquote><p>Anchor是一个快速构建安全Solana程序的框架。</p><p>使用Anchor，您可以快速构建程序，因为它会为您编写各种样板代码，例如账户和指令数据的（反）序列化。</p><p>由于Anchor为您处理了某些安全检查，因此您可以更轻松地构建安全的程序。除此之外，它还允许您简洁地定义额外的检查，并将其与业务逻辑分开。</p><p>这两个方面意味着，你不必再花费时间在繁琐的Solana原始程序上，而是可以更多地投入到最重要的事情上，即你的产品。</p></blockquote><p>简单的点来说，就是Anchor做为一个Solana上的合约开发框架，对于原生使用Rust开发来说的话，anchor 提供了对于一些模版代码，或者说公共代码操作的抽象，使得开发者更加具体的专注与自己的业务逻辑。</p><p>简单的Anchor介绍完了，我们看看如何来初始化一个合约以及部署合约到本地测试网。本地测试网的部署查看<a href="https://creatorsdao.github.io/Solana-Co-Learn/module1/local_program_development/" target="_blank" rel="noopener noreferrer">这个教程</a>完成✅。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="一个简单的anchor合约的部署测试">一个简单的Anchor合约的部署测试<a href="#一个简单的anchor合约的部署测试" class="hash-link" aria-label="Direct link to 一个简单的Anchor合约的部署测试" title="Direct link to 一个简单的Anchor合约的部署测试">​</a></h2><p>对于要使用Anchor来开发他需要一些前置的环境配置，例如你需要先安装Rust环境，第二个是安装Solana-cli工具。因为这里Anchor要使用solana cli的 <code>solana-keygen new</code> 命令来生成一个本地册测试账户。最后一个是Yarn。这里是Anchor官方给出的<a href="https://www.anchor-lang.com/docs/installation" target="_blank" rel="noopener noreferrer">安装教程</a>，按照这个安装即可。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="下面是具体的anchor如何安装">下面是具体的anchor如何安装<a href="#下面是具体的anchor如何安装" class="hash-link" aria-label="Direct link to 下面是具体的anchor如何安装" title="Direct link to 下面是具体的anchor如何安装">​</a></h3><p>官方推荐的是avm，一个Anchor的多版本管理器。前面我们已经安装了Rust语言，我们就可以使用cargo来安装这个工具。</p><p>通过执行这个命令，我们就可以安装avm了。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cargo </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> --git https://github.com/coral-xyz/anchor avm --locked --force</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>按照完之后我们就可以使用avm选择一个具体的版本安装，下面者一个命令我们安装的Anchor版本是最新的Anchor。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">avm </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">avm use latest</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>验证安装成功的我们可以执行<code>anchor --version</code>命令，我们可以看到有版本号输出，说明我们安装成功了。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="一个anchor项目的结构">一个anchor项目的结构<a href="#一个anchor项目的结构" class="hash-link" aria-label="Direct link to 一个anchor项目的结构" title="Direct link to 一个anchor项目的结构">​</a></h3><p>通过执行<code>anchor init new-workspace-name</code> 我们就可以初始化一个solana program。</p><p>下面是通过执行<code>anchor init hello-world</code>的输出。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">ls</span><span class="token plain"> --tree </span><span class="token builtin class-name">.</span><span class="token plain"> --depth </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  .git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  .gitignore</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  .prettierignore</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  Anchor.toml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  Cargo.toml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  migrations</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  package-lock.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  programs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  target</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  tests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  tsconfig.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└──  yarn-error.log</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>app</code> 文件夹：初始化之后是一个空文件夹，这里可以用来存放自己的前端代码。</li><li><code>programs</code> 文件夹：此文件夹包含程序代码。它可以包含多个文件，但最初只包含与 <code>&lt;new-workspace-name&gt;</code> 相同名称的程序。并且这个program中已经包含了一些示例代码，在<code>lib.rs</code>中可以看到。</li><li><code>tests</code> 文件夹：包含您的端到端测试的文件夹。它已经包含一个测试 <code>programs/&lt;new-workspace-name&gt;</code> 中示例代码的文件，这里面的测试都是使用typescript写✍️的代码。当执行<code>anchor test</code>的时候会在本地启动一个solana的测试节点，执行里面的测试代码。</li><li><code>migrations</code> 文件夹：在这个文件夹中，保存程序的部署和迁移脚本。</li><li><code>Anchor.toml</code> 文件：此文件配置了程序的工作区范围设置。<ul><li>程序在本地网络上的地址（ <code>[programs.localnet]</code> ）</li><li>程序可以推送到的注册表 ( <code>[registry]</code> )</li><li>一个可以在你的测试中使用的也就是通过<code>solana-keygen new</code> 生成的私钥文件路径 ( <code>[provider]</code> )</li></ul></li><li><code>.anchor</code> 这个文件是只有在执行<code>anchor test</code>之后才生成的文件夹，里面包含了最新的程序日志和用于测试的本地账本。</li></ul><p>这个是在执行<code>anchor test</code>之后的文件内容。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">ls</span><span class="token plain"> --tree </span><span class="token builtin class-name">.</span><span class="token plain"> --depth </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  .anchor</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  .git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  .gitignore</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  .prettierignore</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  Anchor.toml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  Cargo.lock</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  Cargo.toml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  migrations</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  package-lock.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  programs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  target</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  tests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├──  tsconfig.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└──  yarn-error.log</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>下面这个是执行<code>anchor test</code>之后<code>.anchor</code>里面生成的日志内容。</p><p><img loading="lazy" src="/assets/images/anchor-test-log-3b291e7ed8269316b22fd140e27b1659.png" width="2840" height="654" class="img_ev3q"></p><p>好说了这么多，我们看下如何使用anchor打印一个hello world， 目前先只通过anchor test 来观察打印，后面在做介绍如何通过前端调用打印。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="初始化一个-hello-world-program">初始化一个 hello world program<a href="#初始化一个-hello-world-program" class="hash-link" aria-label="Direct link to 初始化一个 hello world program" title="Direct link to 初始化一个 hello world program">​</a></h2><p>通过执行<code>anchor init hello-world</code>， 会为我们创建一个solana program的样板代码。</p><div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">use</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">anchor_lang</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">::</span><span class="token namespace" style="opacity:0.7">prelude</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">::</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property" style="color:#36acaa">declare_id!</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"2HvxNpAdkkWitSQyDy9vMvJDpRsvtrhZ6JNqsXzGRi3i"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token attribute attr-name" style="color:#00a4db">#[program]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">pub</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">mod</span><span class="token plain"> </span><span class="token module-declaration namespace" style="opacity:0.7">counter</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">use</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">::</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">pub</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:#d73a49">initialize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token class-name">Context</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token class-name">Initialize</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-&gt;</span><span class="token plain"> </span><span class="token class-name">Result</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">Ok</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token attribute attr-name" style="color:#00a4db">#[derive(Accounts)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">pub</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token type-definition class-name">Initialize</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上面这段代码就是通过<code>anchor init hello-world</code> 创建出来的代码，文件存放在<code>hello-world/programs/hello-world/src/lib.rs</code>中。</p><p>下面我们就通过简单的修改下这个简单的代码，在里面添加一个打印hello, world!的消息。</p><div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">use</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">anchor_lang</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">::</span><span class="token namespace" style="opacity:0.7">prelude</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">::</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property" style="color:#36acaa">declare_id!</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"2HvxNpAdkkWitSQyDy9vMvJDpRsvtrhZ6JNqsXzGRi3i"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token attribute attr-name" style="color:#00a4db">#[program]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">pub</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">mod</span><span class="token plain"> </span><span class="token module-declaration namespace" style="opacity:0.7">counter</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">use</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">::</span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">pub</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:#d73a49">initialize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token class-name">Context</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token class-name">Initialize</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-&gt;</span><span class="token plain"> </span><span class="token class-name">Result</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token macro property" style="color:#36acaa">msg!</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hello, world!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">Ok</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token attribute attr-name" style="color:#00a4db">#[derive(Accounts)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">pub</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token type-definition class-name">Initialize</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这个是添加了<code>msg!</code>这段代码，<code>msg!</code>主要做的事情，类似于在rust中打印内容到标准输出的<code>println!</code>，
因为是solana program，他是链上代码，我们不可能打印到标准输出的，所以这我们就通过使用<code>msg!</code>这个宏记录自己需要打印的东西。</p><blockquote><p>在Solana中，由于智能合约在执行时是在分布式网络中运行的，无法直接使用传统的标准输出来打印消息。为了在智能合约中输出调试信息或日志，Solana提供了<code>msg!</code>宏。</p><p><code>msg!</code>宏的使用方式与<code>println!</code>宏类似，你可以在智能合约中使用它来打印消息。这些消息将被记录并作为日志输出到Solana节点的日志文件中。</p><p>需要注意的是，<code>msg!</code>宏只在Solana智能合约中可用，用于在智能合约执行过程中输出消息。它与Rust中的<code>println!</code>宏略有不同，因为它将消息记录到Solana节点的日志文件中，而不是直接输出到控制台。</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="观察-helloworld消息">观察👀 <code>hello,world!</code>消息<a href="#观察-helloworld消息" class="hash-link" aria-label="Direct link to 观察-helloworld消息" title="Direct link to 观察-helloworld消息">​</a></h2><p>想要观察是否打印了<code>hello, world!</code>这个消息，我们可以通过运行<code>anchor test</code>。这个会记录📝program在测试执行的内容。</p><p><img loading="lazy" src="/assets/images/anchor-hello-msg-4272d7733e68cfc564e614cedf2600a4.png" width="2804" height="586" class="img_ev3q"></p><p>我们可以看到通过执行<code>anchor test</code>已经将我们打印的hello,world! 记录下来了。</p><p>来看下执行的这个测试脚本吧。这里是执行的程序的<code>initialize</code>执行的调用。我们在这个指令中添加了打印hello, world的代码。</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> anchor </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"@coral-xyz/anchor"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> Program </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"@coral-xyz/anchor"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> Hello </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../target/types/hello"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">describe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hello"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Configure the client to use the local cluster.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  anchor</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setProvider</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">anchor</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">AnchorProvider</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">env</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> program </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> anchor</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">workspace</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Hello </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> Program</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Hello</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">it</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Is initialized!"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Add your test here.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> tx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> program</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">methods</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">initialize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">rpc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Your transaction signature"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tx</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>anchor.setProvider(anchor.AnchorProvider.env());</code> 这段代码是通过读取的Anchor.toml中的配置初始化了Anchor的provider。</p><div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token table class-name">features</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key property" style="color:#36acaa">seeds</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key property" style="color:#36acaa">skip-lint</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token table class-name">programs.localnet</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key property" style="color:#36acaa">hello</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"2HvxNpAdkkWitSQyDy9vMvJDpRsvtrhZ6JNqsXzGRi3i"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token table class-name">registry</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key property" style="color:#36acaa">url</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"https://api.apr.dev"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token table class-name">provider</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key property" style="color:#36acaa">cluster</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Localnet"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key property" style="color:#36acaa">wallet</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/Users/davirain/.config/solana/id.json"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token table class-name">scripts</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key property" style="color:#36acaa">test</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"yarn run ts-mocha -p ./tsconfig.json -t 1000000 tests/**/*.ts"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我们可以看到这里的provider是localnet,wallet是自己本地的私钥路径。</p><p><code>const program = anchor.workspace.Hello as Program&lt;Hello&gt;;</code></p><p>这一步是我们初始化了一个solana 的program 实例，通过Hello这个IDL文件。</p><p>在测试中，使用<code>it</code>函数定义了一个测试用例，名称为"Is initialized!"。在这个测试用例中，调用了<code>program.methods.initialize().rpc()</code>方法，该方法是调用合约中的<code>initialize</code>方法，并通过RPC方式发送交易。然后，使用<code>console.log</code>打印出交易的签名。</p><p>这段代码的目的是测试<code>hello</code>程序是否能够成功初始化。通过调用<code>initialize</code>方法并打印交易签名，可以验证初始化过程是否成功。</p><p>这就是一个简单的<code>Anchor</code>合约的入门。</p>]]></content:encoded>
            <category>blog</category>
            <category>blockchain</category>
            <category>solana</category>
            <category>anchor</category>
        </item>
        <item>
            <title><![CDATA[ADA(派生账号) 和 PDA 使用]]></title>
            <link>https://www.all-in-one-blockchain.xyz/blog/ada-and-pda</link>
            <guid>https://www.all-in-one-blockchain.xyz/blog/ada-and-pda</guid>
            <pubDate>Tue, 29 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[在solana的数据账号使用过程中，牵扯两种账号]]></description>
            <content:encoded><![CDATA[<p>在solana的数据账号使用过程中，牵扯两种账号</p><ul><li>PDA (Program Derived Account)</li></ul><p>由 createProgramAddressSync 产生。
通常由特定程序（通常是一个智能合约）关联额外的账户。该账号没有私钥，故除程序本身外，无法完成数据签名，无法完成完整的数据交易。</p><ul><li>ADA (Account Derived Account)</li></ul><p>由 createWithSeed 方法产生。
有一个账号公钥派生出来的关联账户，数据签名权限属于主账号。也即，需要主账号的签名才能完成完整的数据交易。</p><p>solana中，根据数据签名，决定了数据的真实所有权。即 <code>我的数据我做主</code></p><p>本文主要分析这两种账号的异同。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="地址生成逻辑介绍如下">地址生成逻辑介绍如下<a href="#地址生成逻辑介绍如下" class="hash-link" aria-label="Direct link to 地址生成逻辑介绍如下" title="Direct link to 地址生成逻辑介绍如下">​</a></h2><ul><li>PDA 地址生成规则</li></ul><ol><li>buffer = <!-- -->[seed,programId,"ProgramDerivedAddress"]</li><li>对buffer 取 sha256</li><li>如果在曲线上，那么抛出error, 如果不在，那么直接返回作为 使用地址</li></ol><p><a href="https://github.com/solana-labs/solana-web3.js/blob/ae1056366cd75fea784e9146af511302d5a62845/packages/library-legacy/src/publickey.ts#L168" target="_blank" rel="noopener noreferrer">createProgramAddressSync</a></p><ul><li>ADA 生成</li></ul><ol><li>buffer=<!-- -->[fromPublicKey,seed,programId]</li><li>buffer 取 sha256, 直接返回</li></ol><p><a href="https://github.com/solana-labs/solana-web3.js/blob/ae1056366cd75fea784e9146af511302d5a62845/packages/library-legacy/src/publickey.ts#L150" target="_blank" rel="noopener noreferrer">createWithSeed</a></p><p>区别在于，数据的托管使用逻辑.</p><ul><li>ADA 数据签名权限，在于账户本身。即 我的数据我做主，未经允许(我未签名)不能修改。</li><li>PDA 数据签名权限在于合约。经过程序签名，可以修改 account 的数据和提取其中的sol。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ada-账号使用">ADA 账号使用<a href="#ada-账号使用" class="hash-link" aria-label="Direct link to ADA 账号使用" title="Direct link to ADA 账号使用">​</a></h2><p>数据操作，有配套的函数对应，内部包含 xxxxWithSeedParams 类型的参数，完成对应的操作。
操作数据，需要 主账户的签名，这一点决定了，账号的真实所有权。</p><ul><li>SystemProgram.createAccountWithSeed 初始化账号</li><li>SystemProgram.assign 重新分配owner</li><li>SystemProgram.allocate 分配空间</li><li>SystemProgram.transfer 转移SOL</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="pda-账号使用">PDA 账号使用<a href="#pda-账号使用" class="hash-link" aria-label="Direct link to PDA 账号使用" title="Direct link to PDA 账号使用">​</a></h2><ul><li>客户端只用于账户地址推导，不能初始化。初始化过程在合约内部完成。</li><li>因其签名权限，必须在合约内部完成。他的操作权限完全属于智能合约。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ada-账号使用-example">ADA 账号使用 example<a href="#ada-账号使用-example" class="hash-link" aria-label="Direct link to ADA 账号使用 example" title="Direct link to ADA 账号使用 example">​</a></h2><div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> seed </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ada.creator"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 初始化ada 账户</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> ada_account </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> web3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PublicKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createWithSeed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    signer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">publicKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    seed</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    program</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"ada_account address: "</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ada_account</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toBase58</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> ada_info </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> connection</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getAccountInfo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ada_account</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 根据是否存在账号，决定是否初始化</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ada_info</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ada_info</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"ada account not found"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> transaction </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">web3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Transaction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      web3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SystemProgram</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createAccountWithSeed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        newAccountPubkey</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ada_account</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fromPubkey</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> signer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">publicKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        basePubkey</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> signer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">publicKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        programId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> program</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        seed</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        lamports</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> web3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">LAMPORTS_PER_SOL</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        space</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="pda-使用-example">PDA 使用 example<a href="#pda-使用-example" class="hash-link" aria-label="Direct link to PDA 使用 example" title="Direct link to PDA 使用 example">​</a></h2><p>客户端部分代码逻辑</p><div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> pda_seed </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pda.creator"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> obj </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Model</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">pda</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> bump_seed</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> web3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PublicKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">findProgramAddressSync</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">signer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">publicKey</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toBuffer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">TextEncoder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">movie</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">title</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    program</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"pda address : "</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pda</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toBase58</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> instruction </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">web3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">TransactionInstruction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    keys</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 付钱的账户</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pubkey</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> signer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">publicKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        isSigner</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        isWritable</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// PDA将存储数据</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pubkey</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> pda</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        isSigner</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        isWritable</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 系统程序将用于创建PDA</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pubkey</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> web3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SystemProgram</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">programId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        isSigner</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        isWritable</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 传输数据 </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    data</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">serialize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    programId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> program</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> transaction </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">web3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Transaction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">instruction</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> signature </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> web3</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sendAndConfirmTransaction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    connection</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    transaction</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">signer</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">signature</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>合约部分代码逻辑</p><div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 获取账户迭代器</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> account_info_iter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token keyword" style="color:#00009f">mut</span><span class="token plain"> accounts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">iter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 获取账户</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> initializer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">next_account_info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">account_info_iter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">?</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> pda_account </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">next_account_info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">account_info_iter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">?</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> system_program </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">next_account_info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">account_info_iter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">?</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 构造PDA账户</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pda</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> bump_seed</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token class-name">Pubkey</span><span class="token punctuation" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">find_program_address</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">initializer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">as_ref</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> title</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">as_bytes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> program_id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 和客户端比对</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> pda </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">pda_account</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">key </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token macro property" style="color:#36acaa">msg!</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Invalid seeds for PDA"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token class-name">Err</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">ProgramError</span><span class="token punctuation" style="color:#393A34">::</span><span class="token class-name">InvalidArgument</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 计算所需的租金</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> rent </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">Rent</span><span class="token punctuation" style="color:#393A34">::</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">?</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> rent_lamports </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> rent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">minimum_balance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">total_len</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 创建账户</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">invoke_signed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token namespace" style="opacity:0.7">system_instruction</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">::</span><span class="token function" style="color:#d73a49">create_account</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        initializer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pda_account</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rent_lamports</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        total_len</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">try_into</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">map_err</span><span class="token punctuation" style="color:#393A34">(</span><span class="token closure-params closure-punctuation punctuation" style="color:#393A34">|</span><span class="token closure-params">_</span><span class="token closure-params closure-punctuation punctuation" style="color:#393A34">|</span><span class="token plain"> </span><span class="token class-name">Error</span><span class="token punctuation" style="color:#393A34">::</span><span class="token class-name">ConvertUsizeToU64Failed</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">?</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        program_id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        initializer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">clone</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pda_account</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">clone</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        system_program</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">clone</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">initializer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">as_ref</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> title</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">as_bytes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">bump_seed</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">?</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// MovieAccountState 定义的state类型</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">mut</span><span class="token plain"> account_data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">try_from_slice_unchecked</span><span class="token punctuation" style="color:#393A34">::</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token class-name">MovieAccountState</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">pda_account</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">borrow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">unwrap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">account_data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">title </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> title</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">account_data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">rating </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> rating</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">account_data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">description </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> description</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">account_data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">is_initialized </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 写入pda 数据本身</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">account_data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">serialize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token keyword" style="color:#00009f">mut</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token keyword" style="color:#00009f">mut</span><span class="token plain"> pda_account</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">borrow_mut</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">..</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">?</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="#参考资料" class="hash-link" aria-label="Direct link to 参考资料" title="Direct link to 参考资料">​</a></h2><ul><li><a href="https://solana.stackexchange.com/questions/1557/then-what-is-the-purpose-of-createwithseed-instruction?rq=1" target="_blank" rel="noopener noreferrer">https://solana.stackexchange.com/questions/1557/then-what-is-the-purpose-of-createwithseed-instruction?rq=1</a></li><li><a href="https://solanacookbook.com/references/accounts.html#how-to-create-accounts-with-seeds" target="_blank" rel="noopener noreferrer">https://solanacookbook.com/references/accounts.html#how-to-create-accounts-with-seeds</a></li></ul>]]></content:encoded>
            <category>blog</category>
            <category>blockchain</category>
            <category>solana</category>
            <category>co-learn</category>
        </item>
        <item>
            <title><![CDATA[使用anchor build 依賴衝突]]></title>
            <link>https://www.all-in-one-blockchain.xyz/blog/error-after-running-anchor-build</link>
            <guid>https://www.all-in-one-blockchain.xyz/blog/error-after-running-anchor-build</guid>
            <pubDate>Mon, 28 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[報錯日志]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="報錯日志">報錯日志<a href="#報錯日志" class="hash-link" aria-label="Direct link to 報錯日志" title="Direct link to 報錯日志">​</a></h2><p>在使用solana-cli時候，鑑於一些依賴版本限制，會用到cli14.xx(主網版本)，而不是16.xx(測試網版本)</p><p>例如，在使用solana-cli版本爲<code>1.14.17</code>, anchor版本爲<code>0.26.0</code>的環境中, <code>anchor init</code>創建一個新項目後運行 <code>anchor build</code>會發生以下錯誤：</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">error: package constant_time_eq v0.3.0 cannot be built because it requires rustc </span><span class="token number" style="color:#36acaa">1.66</span><span class="token plain">.0 or newer, </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> the currently active rustc version is </span><span class="token number" style="color:#36acaa">1.62</span><span class="token plain">.0-dev</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="報錯原因">報錯原因<a href="#報錯原因" class="hash-link" aria-label="Direct link to 報錯原因" title="Direct link to 報錯原因">​</a></h2><p>使用的solana-cli版本在14.xxx， cli內自帶的rustc版本過老，無法編譯較新的依賴</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="解決方案">解決方案<a href="#解決方案" class="hash-link" aria-label="Direct link to 解決方案" title="Direct link to 解決方案">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-升級solana-cli至最新版本">1. 升級solana-cli至最新版本<a href="#1-升級solana-cli至最新版本" class="hash-link" aria-label="Direct link to 1. 升級solana-cli至最新版本" title="Direct link to 1. 升級solana-cli至最新版本">​</a></h3><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">solana-install update</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2指定依賴包版本">2.指定依賴包版本<a href="#2指定依賴包版本" class="hash-link" aria-label="Direct link to 2.指定依賴包版本" title="Direct link to 2.指定依賴包版本">​</a></h3><p>需要在Cargo.toml文件下指定以下依賴版本</p><div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">getrandom </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> version </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"0.2.9"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> features </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"custom"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">solana</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">program </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"=1.14.17"</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">winnow</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"=0.4.1"</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">toml_datetime</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"=0.6.1"</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">blake3 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"=1.3.1"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>運行<code>cargo clean</code>後重新運行<code>anchor build</code>即可解決</p><h2></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="監聽程序log監聽到兩次">監聽程序log監聽到兩次<a href="#監聽程序log監聽到兩次" class="hash-link" aria-label="Direct link to 監聽程序log監聽到兩次" title="Direct link to 監聽程序log監聽到兩次">​</a></h2><p>在使用<code>program.addEventListener()</code>有可能聽到兩次相同的事件，其中一次的txSign會是“1111111111111111111111111111111111111111111111111111111111111111”， 這是因爲監聽到了模擬時的交易哈系，我們只需要在監聽到該交易哈系時拋棄即可</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">program</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"eventName"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> slot</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> signature</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">signature </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1111111111111111111111111111111111111111111111111111111111111111'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// do ur stuff</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>然而，有時websocket訂閱也會多次返回實際簽名。如果是這種情況，您可以使用一些緩存解決方案。例如，創建一個具有一定長度限制的集合，在此處添加簽名並檢查該集合中是否存在新簽名：</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> handledSignatures </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Set</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name builtin">string</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> maxHandledSignaturesLen </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">program</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"eventName"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> slot</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> signature</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">signature </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'1111111111111111111111111111111111111111111111111111111111111111'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">handledSignatures</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">has</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">signature</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// do ur stuff</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    handledSignatures</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">signature</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">handledSignatures</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">size </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> maxHandledSignaturesLen</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      handledSignatures</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">handledSignatures</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">values</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">next</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>blog</category>
            <category>blockchain</category>
            <category>solana</category>
            <category>anchor</category>
        </item>
        <item>
            <title><![CDATA[翻译 Solana 的状态压缩]]></title>
            <link>https://www.all-in-one-blockchain.xyz/blog/solana-state-compression</link>
            <guid>https://www.all-in-one-blockchain.xyz/blog/solana-state-compression</guid>
            <pubDate>Sat, 26 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[在Solana上，状态压缩是一种创建离链数据的“指纹”（或哈希）并将该指纹存储在链上以进行安全验证的方法。有效地利用Solana账本的安全性来安全验证离链数据，以确保其未被篡改。]]></description>
            <content:encoded><![CDATA[<p>在<code>Solana</code>上，状态压缩是一种创建离链数据的“指纹”（或哈希）并将该指纹存储在链上以进行安全验证的方法。有效地利用<code>Solana</code>账本的安全性来安全验证离链数据，以确保其未被篡改。</p><p>这种“压缩”方法使得Solana的程序和dApps能够使用廉价的区块链<a href="https://docs.solana.com/terminology#ledger" target="_blank" rel="noopener noreferrer">账本</a>空间来安全存储数据，而不是更昂贵的<a href="https://docs.solana.com/terminology#account" target="_blank" rel="noopener noreferrer">账户</a>空间。</p><p>这是通过使用一种特殊的二叉树结构，称为并发默克尔树，对每个数据片段（称为 <code>leaf</code> ）创建哈希，将它们哈希在一起，并仅将最终哈希存储在链上来实现的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="什么是状态压缩">什么是状态压缩？<a href="#什么是状态压缩" class="hash-link" aria-label="Direct link to 什么是状态压缩？" title="Direct link to 什么是状态压缩？">​</a></h2><p>简单来说，状态压缩使用“树”结构将链外数据以确定性的方式进行加密哈希，计算出一个最终的哈希值，并将其存储在链上。</p><p>这些树是通过这个“确定性”过程创建的：</p><ul><li>获取任何数据</li><li>创建这些数据的哈希值</li><li>将此哈希值存储为树底部的 <code>leaf</code></li><li>每个 <code>leaf</code> 对都会被一起哈希，创建一个 <code>branch</code></li><li>每个 <code>branch</code> 然后一起哈希</li><li>不断攀爬树木并将相邻的树枝连接在一起</li><li>树顶上一旦到达，就会产生最后的 <code>root hash</code></li></ul><p>这个 <code>root hash</code> 然后存储在链上，作为每个叶子节点中所有数据的可验证证据。这样任何人都可以通过加密验证树中所有离链数据，而实际上只需在链上存储少量数据。因此，由于这种"状态压缩"，大大降低了存储/证明大量数据的成本。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="默克尔树和并发默克尔树">默克尔树和并发默克尔树<a href="#默克尔树和并发默克尔树" class="hash-link" aria-label="Direct link to 默克尔树和并发默克尔树" title="Direct link to 默克尔树和并发默克尔树">​</a></h2><p><code>Solana</code>的状态压缩使用了一种特殊类型的默克尔树，允许对任何给定的树进行多次更改，同时仍然保持树的完整性和有效性。</p><p>这棵特殊的树被称为“并发默克尔树”，有效地在链上保留了树的“更改日志”。允许在一个证明失效之前对同一棵树进行多次快速更改（即在同一个区块中）。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="默克尔树是什么">默克尔树是什么？<a href="#默克尔树是什么" class="hash-link" aria-label="Direct link to 默克尔树是什么？" title="Direct link to 默克尔树是什么？">​</a></h3><p>默克尔树，有时也被称为“哈希树”，是一种基于哈希的二叉树结构，其中每个<code>leaf</code>节点都被表示为其内部数据的加密哈希。而每个非叶节点，也被称为“<code>branch</code>节点”，则被表示为其子叶节点哈希的哈希值。</p><p>每个分支也被哈希在一起，沿着树向上爬，直到最后只剩下一个哈希。这个最终的哈希，称为 <code>root hash</code> 或者"根"，可以与一个"证明路径"结合使用，来验证存储在叶节点中的任何数据。</p><p>一旦计算出最终的根哈希值(<code>root hash</code>)，可以通过重新计算特定叶子(<code>leaf</code>)节点的数据和每个相邻分支的哈希标签（称为“证明路径”）来验证存储在节点中的任何数据。将这个“重新哈希”与根哈希值进行比较，可以验证底层叶子数据的准确性。如果它们匹配，数据就被验证为准确的。如果它们不匹配，叶子数据已被更改。</p><p>只要需要，原始叶子数据可以通过对新的叶子数据进行哈希运算并重新计算根哈希值来进行更改，方法与原始根哈希值的计算方式相同。然后，这个新的根哈希值用于验证任何数据，并且有效地使之前的根哈希值和证明无效。因此，对这些传统的默克尔树的每一次更改都需要按顺序执行。</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>当使用默克尔树时，更改叶子数据并计算新的根哈希的过程可能是非常常见的事情！虽然这是树的设计要点之一，但它可能导致最显著的缺点之一：快速变化。</p></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="什么是并发默克尔树">什么是并发默克尔树？<a href="#什么是并发默克尔树" class="hash-link" aria-label="Direct link to 什么是并发默克尔树？" title="Direct link to 什么是并发默克尔树？">​</a></h3><p>在高吞吐量的应用中，比如在<a href="https://docs.solana.com/validator/runtime" target="_blank" rel="noopener noreferrer"><code>Solana</code>运行时</a>中，对于链上传统Merkle树的更改请求可能会相对快速地连续接收到验证者（例如在同一个槽中）。每个叶子数据的更改仍然需要按顺序执行。这导致每个后续的更改请求都会失败，因为根哈希和证明已经被同一槽中之前的更改请求无效化了。</p><p>进入，并发默克尔树。</p><p>并发默克尔树存储了最近更改的安全日志、它们的根哈希以及用于推导根哈希的证明。这个日志缓冲区存储在链上的每个树对应的特定账户中，最大记录数为（也称为 <code>maxBufferSize</code> ）。</p><p>当同一时隙内的验证者收到多个叶子数据变更请求时，链上并发 <code>Merkle</code> 树可以将这个“变更日志缓冲区”作为更可接受的证明的真实来源。有效地允许在同一时隙内对同一棵树进行多达 <code>maxBufferSize</code> 次变更。大幅提升吞吐量。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="并发默克尔树的大小调整">并发默克尔树的大小调整<a href="#并发默克尔树的大小调整" class="hash-link" aria-label="Direct link to 并发默克尔树的大小调整" title="Direct link to 并发默克尔树的大小调整">​</a></h2><p>创建这种链上树时，有三个值将决定您的树的大小、创建树的成本以及对树的并发更改数量：</p><ol><li><code>max depth</code> 最大深度</li><li><code>max buffer size</code> 最大缓冲区大小</li><li><code>canopy depth</code></li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="max-depth">max depth<a href="#max-depth" class="hash-link" aria-label="Direct link to max depth" title="Direct link to max depth">​</a></h3><p>树的“最大深度”是从任何数据 <code>leaf</code> 到树的 <code>root</code> 所需的最大跳数。</p><p>由于默克尔树是二叉树，每个叶子节点只与另一个叶子节点相连；存在于一个 <code>leaf pair</code> 中。</p><p>因此，树的 <code>maxDepth</code> 被用来确定可以通过简单的计算存储在树中的最大节点数（也称为数据或 <code>leafs</code> ）</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">nodes_count = 2 ^ maxDepth</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>由于树的深度必须在创建树时设置，您必须决定您希望树存储多少个数据。然后使用上述简单的计算，您可以确定存储数据的最低 <code>maxDepth</code> 。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="示例1铸造100个nfts">示例1：铸造100个NFTs<a href="#示例1铸造100个nfts" class="hash-link" aria-label="Direct link to 示例1：铸造100个NFTs" title="Direct link to 示例1：铸造100个NFTs">​</a></h4><p>如果你想创建一个用于存储<code>100</code>个压缩NFT的树，我们至少需要"<code>100</code>个叶子"或"<code>100</code>个节点"。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// maxDepth=6 -&gt; 64 nodes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2^6 = 64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// maxDepth=7 -&gt; 128 nodes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2^7 = 128</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>因此，我们需要一个最大深度为 <code>7</code> 的树，以存储 <code>100</code> 个数据。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="例子2铸造15000个nfts">例子2：铸造15000个NFTs<a href="#例子2铸造15000个nfts" class="hash-link" aria-label="Direct link to 例子2：铸造15000个NFTs" title="Direct link to 例子2：铸造15000个NFTs">​</a></h4><p>如果你想创建一个用于存储<code>15000</code>个压缩NFT的树，我们将需要至少"<code>15000</code>个叶子"或"<code>15000</code>个节点"。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// maxDepth=13 -&gt; 8192 nodes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2^13 = 8192</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// maxDepth=14 -&gt; 16384 nodes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2^14 = 16384</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>因此，我们需要一个最大深度为 <code>14</code> 的树，以存储 <code>15000</code> 个数据。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="最大深度越高成本越高">最大深度越高，成本越高<a href="#最大深度越高成本越高" class="hash-link" aria-label="Direct link to 最大深度越高，成本越高" title="Direct link to 最大深度越高，成本越高">​</a></h4><p>创建树时， <code>maxDepth</code> 值将是成本的主要驱动因素之一，因为您将在创建树时支付这笔成本。最大树深度越高，您可以存储的数据指纹（也称为哈希）越多，成本就越高。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="max-buffer-size">max buffer size<a href="#max-buffer-size" class="hash-link" aria-label="Direct link to max buffer size" title="Direct link to max buffer size">​</a></h3><p>“<code>max buffer size</code>” 实际上是树上可以发生的最大变化数量，同时仍然有效的 <code>root hash</code> 。</p><p>由于根哈希有效地是所有叶子数据的单一哈希，改变任何一个叶子将使得所有后续尝试改变常规树的叶子所需的证明无效。</p><p>但是使用并发树，对于这些证明来说，实际上有一个更新的日志。这个日志缓冲区的大小和设置是通过这个 <code>maxBufferSize</code> 值在树创建时完成的。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="canopy-depth">Canopy depth<a href="#canopy-depth" class="hash-link" aria-label="Direct link to Canopy depth" title="Direct link to Canopy depth">​</a></h3><p>“<code>Canopy depth</code>”，有时也称为<code>Canopy</code>大小，是指在任何给定的证明路径上缓存/存储在链上的证明节点数量。</p><p>在对 <code>leaf</code> 执行更新操作时，例如转让所有权（例如出售压缩的<code>NFT</code>），必须使用完整的证明路径来验证叶子节点的原始所有权，从而允许进行更新操作。此验证是使用完整的证明路径来正确计算当前的 <code>root hash</code> （或通过链上的“并发缓冲区”缓存的任何 <code>root hash</code> ）来执行的。</p><p>树的最大深度越大，执行此验证所需的证明节点就越多。例如，如果您的最大深度是 <code>14</code> ，则需要使用 <code>14</code> 个总的证明节点进行验证。随着树的增大，完整的证明路径也会变得更长。</p><p>通常情况下，每个这些证明节点都需要在每个树更新事务中包含。由于每个证明节点的值在事务中占用 <code>32 bytes</code> （类似于提供公钥），较大的树很快就会超过最大事务大小限制。</p><p>进入<code>Canopy</code>。<code>Canopy</code>可以在链上存储一定数量的验证节点（对于任何给定的验证路径）。这样可以在每个更新交易中包含较少的验证节点，从而保持整体交易大小低于限制。</p><p>例如，深度为 <code>14</code> 的树需要 <code>14</code> 个总的验证节点。而有 <code>10</code> 个<code>Canopy</code>的情况下，每个更新事务只需要提交 <code>4</code> 个验证节点。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="canopy深度值越大成本越高"><code>Canopy</code>深度值越大，成本越高<a href="#canopy深度值越大成本越高" class="hash-link" aria-label="Direct link to canopy深度值越大成本越高" title="Direct link to canopy深度值越大成本越高">​</a></h4><p><code>canopyDepth</code> 值也是创建树时成本的主要因素，因为您将在树的创建时支付这个成本。<code>canopyDepth</code>越高，链上存储的数据证明节点越多，成本也越高。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="较小的canopy限制了可组合性">较小的<code>Canopy</code>限制了可组合性<a href="#较小的canopy限制了可组合性" class="hash-link" aria-label="Direct link to 较小的canopy限制了可组合性" title="Direct link to 较小的canopy限制了可组合性">​</a></h4><p>虽然树的创建成本随着<code>Canopy</code>的高度而增加，但较低的<code>Canopy</code>将需要在每个更新事务中包含更多的证明节点。所需提交的节点越多，事务的大小就越大，因此超过事务大小限制就越容易。</p><p>这也适用于任何其他试图与您的树/叶子进行交互的<code>Solana</code>程序或<code>dApp</code>。如果您的树需要太多的证明节点（因为<code>Canopy</code>深度较低），那么任何其他链上程序可能提供的额外操作都将受到其特定指令大小加上您的证明节点列表大小的限制。这限制了可组合性，并限制了您的特定树的潜在附加效用。</p><p>例如，如果您的树被用于压缩的非同质化代币（<code>NFTs</code>），并且<code>Canopy</code>深度非常低，一个<code>NFT</code>市场可能只能支持简单的<code>NFT</code>转移，而无法支持链上竞标系统。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建一棵树的成本">创建一棵树的成本<a href="#创建一棵树的成本" class="hash-link" aria-label="Direct link to 创建一棵树的成本" title="Direct link to 创建一棵树的成本">​</a></h2><p>创建并发 <code>Merkle</code> 树的成本基于树的大小参数： <code>maxDepth</code> ， <code>maxBufferSize</code> 和 <code>canopyDepth</code> 。这些值都用于计算在链上存在树所需的链上存储空间（以字节为单位）。</p><p>一旦计算出所需的空间（以字节为单位），并使用 <a href="https://docs.solana.com/api/http#getminimumbalanceforrentexemption" target="_blank" rel="noopener noreferrer"><code>getMinimumBalanceForRentExemption RPC</code></a>方法，请求在链上分配这些字节所需的费用（以<code>lamports</code>为单位）。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="在javascript中计算树木成本">在JavaScript中计算树木成本<a href="#在javascript中计算树木成本" class="hash-link" aria-label="Direct link to 在JavaScript中计算树木成本" title="Direct link to 在JavaScript中计算树木成本">​</a></h3><p>在 <a href="https://www.npmjs.com/package/@solana/spl-account-compression" target="_blank" rel="noopener noreferrer"><code>@solana/spl-account-compression</code></a> 包中，开发人员可以使用 <code>getConcurrentMerkleTreeAccountSize</code> 函数来计算给定树大小参数所需的空间。</p><p>然后使用 <a href="https://solana-labs.github.io/solana-web3.js/classes/Connection.html#getMinimumBalanceForRentExemption" target="_blank" rel="noopener noreferrer"><code>getMinimumBalanceForRentExemption</code></a> 函数来获取在链上分配所需空间的最终成本（以<code>lamports</code>计算）。</p><p>然后确定以<code>lamports</code>计算的成本，使得这个大小的账户免除租金，与其他账户创建类似。</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// calculate the space required for the tree</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> requiredSpace </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getConcurrentMerkleTreeAccountSize</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  maxDepth</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  maxBufferSize</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  canopyDepth</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// get the cost (in lamports) to store the tree on-chain</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> storageCost </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> connection</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getMinimumBalanceForRentExemption</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  requiredSpace</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="示例费用">示例费用<a href="#示例费用" class="hash-link" aria-label="Direct link to 示例费用" title="Direct link to 示例费用">​</a></h3><p>以下是几个不同树大小的示例成本，包括每个树可能的叶节点数量：</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="例子-116384个节点成本为0222-sol">例子 #1：16,384个节点，成本为0.222 SOL<a href="#例子-116384个节点成本为0222-sol" class="hash-link" aria-label="Direct link to 例子 #1：16,384个节点，成本为0.222 SOL" title="Direct link to 例子 #1：16,384个节点，成本为0.222 SOL">​</a></h4><ul><li>最大深度为 <code>14</code> ，最大缓冲区大小为 <code>64</code></li><li>叶节点的最大数量： <code>16,384</code></li><li>创建 <code>0.222 SOL</code> 的<code>Canopy</code>深度大约需要 <code>0</code> 的成本</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="例子-216384个节点成本为1134-sol">例子 #2：16,384个节点，成本为1.134 SOL<a href="#例子-216384个节点成本为1134-sol" class="hash-link" aria-label="Direct link to 例子 #2：16,384个节点，成本为1.134 SOL" title="Direct link to 例子 #2：16,384个节点，成本为1.134 SOL">​</a></h4><ul><li>最大深度为 <code>14</code> ，最大缓冲区大小为 <code>64</code></li><li>叶节点的最大数量： <code>16,384</code></li><li>创建 <code>1.134 SOL</code> 的<code>Canopy</code>深度大约需要 <code>11</code> 的成本</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="示例-31048576个节点成本为1673-sol">示例 #3：1,048,576个节点，成本为1.673 SOL<a href="#示例-31048576个节点成本为1673-sol" class="hash-link" aria-label="Direct link to 示例 #3：1,048,576个节点，成本为1.673 SOL" title="Direct link to 示例 #3：1,048,576个节点，成本为1.673 SOL">​</a></h4><ul><li>最大深度为 <code>20</code> ，最大缓冲区大小为 <code>256</code></li><li>叶节点的最大数量： <code>1,048,576</code></li><li>创建 <code>1.673 SOL</code> 的<code>Canopy</code>深度大约需要 <code>10</code> 的成本</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="示例41048576个节点成本为15814-sol">示例＃4：1,048,576个节点，成本为15.814 SOL<a href="#示例41048576个节点成本为15814-sol" class="hash-link" aria-label="Direct link to 示例＃4：1,048,576个节点，成本为15.814 SOL" title="Direct link to 示例＃4：1,048,576个节点，成本为15.814 SOL">​</a></h4><ul><li>最大深度为 <code>20</code> ，最大缓冲区大小为 <code>256</code></li><li>叶节点的最大数量： <code>1,048,576</code></li><li>创建 <code>15.814 SOL</code> 的<code>Canopy</code>深度大约需要 <code>15</code> 的成本</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="压缩的nfts">压缩的NFTs<a href="#压缩的nfts" class="hash-link" aria-label="Direct link to 压缩的NFTs" title="Direct link to 压缩的NFTs">​</a></h2><p>压缩的NFT是<code>Solana</code>上状态压缩的最受欢迎的应用之一。通过压缩，一个拥有一百万个<code>NFT</code>的收藏品可以以 <code>~50 SOL</code> 的价格铸造，而不是其未压缩的等价收藏品。</p><blockquote><p>  开发者指南：</p><p>阅读我们的开发者指南，了解<a href="https://docs.solana.com/developing/guides/compressed-nfts" target="_blank" rel="noopener noreferrer">如何铸造和转移压缩的NFT</a>。</p></blockquote>]]></content:encoded>
            <category>blog</category>
            <category>blockchain</category>
            <category>solana</category>
            <category>state-compression</category>
        </item>
        <item>
            <title><![CDATA[Solana共学教程]]></title>
            <link>https://www.all-in-one-blockchain.xyz/blog/first-blog-post</link>
            <guid>https://www.all-in-one-blockchain.xyz/blog/first-blog-post</guid>
            <pubDate>Wed, 09 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[欢迎来到Solana共学，这是一个精心设计的教程系列，供任何对Solana感兴趣的人深入学习。无论你是初学者还是有经验的开发者，这些模块都会引导你了解Solana区块链开发的基本内容。]]></description>
            <content:encoded><![CDATA[<p>欢迎来到Solana共学，这是一个精心设计的教程系列，供任何对Solana感兴趣的人深入学习。无论你是初学者还是有经验的开发者，这些模块都会引导你了解Solana区块链开发的基本内容。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="模块1solana基础">模块1：Solana基础<a href="#模块1solana基础" class="hash-link" aria-label="Direct link to 模块1：Solana基础" title="Direct link to 模块1：Solana基础">​</a></h2><ul><li>区块链基本概念介绍</li><li>本地程序开发环境配置<ul><li>原始Solana合约实现《hello, World》</li><li>Anchor合约框架实现《hello, World》</li><li>使用Solang编译器编译solidity合约实现《hello, World》</li></ul></li><li>BackPack钱包使用</li><li>客户端开发</li><li>钱包和前端</li><li>自定义指令</li><li>开始你自己的定制项目</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="模块2solana高级主题">模块2：Solana高级主题<a href="#模块2solana高级主题" class="hash-link" aria-label="Direct link to 模块2：Solana高级主题" title="Direct link to 模块2：Solana高级主题">​</a></h2><ul><li>SPL token</li><li>NFTs + 使用Metaplex进行铸造</li><li>在用户界面中展示NFTs</li><li>创造神奇的网络货币并出售JPEG图片</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="更深入的模块深入了解solana">更深入的模块：深入了解Solana<a href="#更深入的模块深入了解solana" class="hash-link" aria-label="Direct link to 更深入的模块：深入了解Solana" title="Direct link to 更深入的模块：深入了解Solana">​</a></h2><ul><li><strong>模块3</strong>：Rust入门，原生Solana开发，安全性，NFT质押</li><li><strong>模块4</strong>：本地环境，跨程序调用，测试，质押应用开发</li><li><strong>模块5</strong>：Anchor入门，全栈Anchor应用开发</li><li><strong>模块6</strong>：发布周，随机性，完善</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="特别主题超越基础">特别主题：超越基础<a href="#特别主题超越基础" class="hash-link" aria-label="Direct link to 特别主题：超越基础" title="Direct link to 特别主题：超越基础">​</a></h2><ul><li>Solana程序中的环境变量</li><li>Solana支付，版本化事务，Rust宏</li><li>Solana程序安全：签名授权，所有者检查，重新初始化攻击，PDA共享等</li><li>使用Solidity编写Solana合约</li><li>发行Token2020，压缩NFT</li><li>在Solana中使用The Graph，Oracles Pyth SDK</li><li>TipLink使用，如何在Quicknode和Helius申请RPC endpoint</li><li>等等...</li></ul><p>和我们一起，在这全面的指南中探索Solana的每一个方面。从最基本的内容到安全和合约开发的复杂方面，Solana共学为每一位Solana爱好者提供了内容。</p><p>敬请期待，如果有任何问题或需要进一步的协助，请随时与我们联系。欢迎来到Solana共学！</p>]]></content:encoded>
            <category>blog</category>
            <category>blockchain</category>
            <category>solana</category>
            <category>co-learn</category>
        </item>
    </channel>
</rss>