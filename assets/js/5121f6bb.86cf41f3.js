"use strict";(self.webpackChunkall_in_one_solana=self.webpackChunkall_in_one_solana||[]).push([[7894],{3905:(n,t,e)=>{e.d(t,{Zo:()=>p,kt:()=>A});var a=e(67294);function o(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function l(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function c(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?l(Object(e),!0).forEach((function(t){o(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function r(n,t){if(null==n)return{};var e,a,o=function(n,t){if(null==n)return{};var e,a,o={},l=Object.keys(n);for(a=0;a<l.length;a++)e=l[a],t.indexOf(e)>=0||(o[e]=n[e]);return o}(n,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(a=0;a<l.length;a++)e=l[a],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(o[e]=n[e])}return o}var i=a.createContext({}),s=function(n){var t=a.useContext(i),e=t;return n&&(e="function"==typeof n?n(t):c(c({},t),n)),e},p=function(n){var t=s(n.components);return a.createElement(i.Provider,{value:t},n.children)},u="mdxType",d={inlineCode:"code",wrapper:function(n){var t=n.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(n,t){var e=n.components,o=n.mdxType,l=n.originalType,i=n.parentName,p=r(n,["components","mdxType","originalType","parentName"]),u=s(e),k=o,A=u["".concat(i,".").concat(k)]||u[k]||d[k]||l;return e?a.createElement(A,c(c({ref:t},p),{},{components:e})):a.createElement(A,c({ref:t},p))}));function A(n,t){var e=arguments,o=t&&t.mdxType;if("string"==typeof n||o){var l=e.length,c=new Array(l);c[0]=k;var r={};for(var i in t)hasOwnProperty.call(t,i)&&(r[i]=t[i]);r.originalType=n,r[u]="string"==typeof n?n:o,c[1]=r;for(var s=2;s<l;s++)c[s]=e[s];return a.createElement.apply(null,c)}return a.createElement.apply(null,e)}k.displayName="MDXCreateElement"},32317:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>s});var a=e(87462),o=(e(67294),e(3905));const l={sidebar_position:79,sidebar_label:"\u5c06\u6240\u6709\u90e8\u5206\u6574\u5408\u5230\u4e00\u8d77",sidebar_class_name:"green"},c="\u5c06\u6240\u6709\u90e8\u5206\u6574\u5408\u5230\u4e00\u8d77",r={unversionedId:"module4/ship-a-staking-app/put-it-all-together/README",id:"module4/ship-a-staking-app/put-it-all-together/README",title:"\u5c06\u6240\u6709\u90e8\u5206\u6574\u5408\u5230\u4e00\u8d77",description:"\u524d\u7aef\u8d28\u62bc\u90e8\u5206",source:"@site/docs/Solana-Co-Learn/module4/ship-a-staking-app/put-it-all-together/README.md",sourceDirName:"module4/ship-a-staking-app/put-it-all-together",slug:"/module4/ship-a-staking-app/put-it-all-together/",permalink:"/Solana-Co-Learn/module4/ship-a-staking-app/put-it-all-together/",draft:!1,editUrl:"https://github.com/CreatorsDAO/all-in-one-solana/tree/main/docs/Solana-Co-Learn/module4/ship-a-staking-app/put-it-all-together/README.md",tags:[],version:"current",lastUpdatedBy:"Davirain",lastUpdatedAt:1695967092,formattedLastUpdatedAt:"Sep 29, 2023",sidebarPosition:79,frontMatter:{sidebar_position:79,sidebar_label:"\u5c06\u6240\u6709\u90e8\u5206\u6574\u5408\u5230\u4e00\u8d77",sidebar_class_name:"green"},sidebar:"tutorialSidebar",previous:{title:"\u6784\u5efa\u4e00\u4e2a\u4ee3\u5e01\u94f8\u9020\u5668",permalink:"/Solana-Co-Learn/module4/ship-a-staking-app/build-a-token-minter/"},next:{title:"\u6df1\u5165Anchor\u6846\u67b6",permalink:"/Solana-Co-Learn/module5/"}},i={},s=[],p={toc:s},u="wrapper";function d(n){let{components:t,...e}=n;return(0,o.kt)(u,(0,a.Z)({},p,e,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u5c06\u6240\u6709\u90e8\u5206\u6574\u5408\u5230\u4e00\u8d77"},"\u5c06\u6240\u6709\u90e8\u5206\u6574\u5408\u5230\u4e00\u8d77"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u524d\u7aef\u8d28\u62bc\u90e8\u5206")),(0,o.kt)("p",null,"\u4f60\u80fd\u611f\u53d7\u5230\u5417\uff1f\u7ec8\u70b9\u7ebf\u5c31\u5728\u773c\u524d\u4e86...\u81f3\u5c11\u5bf9\u4e8e\u8fd9\u4e2a\u6838\u5fc3\u90e8\u5206\u6765\u8bf4\u662f\u8fd9\u6837\u7684\u3002\ud83d\ude06"),(0,o.kt)("p",null,"\u6211\u4eec\u5c06\u96c6\u4e2d\u7cbe\u529b\u4f7f\u7a0b\u5e8f\u524d\u7aef\u7684\u8d28\u62bc\u548c\u89e3\u8d28\u62bc\u6307\u4ee4\u6b63\u5e38\u8fd0\u884c\u3002"),(0,o.kt)("p",null,"\u9996\u5148\uff0c\u5728\u4f60\u7684\u524d\u7aef\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"utils")," \u7684\u65b0\u6587\u4ef6\u5939\u3002\u7136\u540e\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"instructions.ts")," \u7684\u6587\u4ef6\uff0c\u5e76\u4eceNFT\u8d28\u62bc\u9879\u76ee\u4e2d\u590d\u5236/\u7c98\u8d34\u6574\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"instructions.ts")," \u6587\u4ef6\u3002\u7531\u4e8e\u4ee3\u7801\u8d85\u8fc7",(0,o.kt)("inlineCode",{parentName:"p"},"200"),"\u884c\uff0c\u6240\u4ee5\u6211\u4e0d\u4f1a\u5728\u8fd9\u91cc\u7c98\u8d34\u3002\ud83d\ude2c"),(0,o.kt)("p",null,"\u4e0b\u4e00\u6b65\u6211\u4eec\u5c06\u8fdb\u5165 ",(0,o.kt)("inlineCode",{parentName:"p"},"StakeOptionsDisplay")," \u6587\u4ef6\uff08",(0,o.kt)("inlineCode",{parentName:"p"},"//components/StakeOptionsDisplay.rs"),"\uff09\u3002\u4f60\u4f1a\u6ce8\u610f\u5230\u6211\u4eec\u6709\u4e09\u4e2a\u7a7a\u51fd\u6570\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"handleStake"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"handleUnstake")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"handleClaim"),"\u3002\u8fd9\u5c06\u662f\u672c\u8282\u7684\u91cd\u70b9\u3002"),(0,o.kt)("p",null,"\u548c\u5f80\u5e38\u4e00\u6837\uff0c\u5148\u8ba9\u6211\u4eec\u51c6\u5907\u597d\u94b1\u5305\u548c\u7f51\u7edc\u8fde\u63a5\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const walletAdapter = useWallet()\nconst { connection } = useConnection()\n")),(0,o.kt)("p",null,"\u6211\u4eec\u5148\u786e\u8ba4\u4e0b\u94b1\u5305\u662f\u5426\u5df2\u8fde\u63a5\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'if (!walletAdapter.connected || !walletAdapter.publicKey) {\n  alert("Please connect your wallet")\n  return\n}\n')),(0,o.kt)("p",null,"\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u521b\u5efa\u8d28\u62bc\u6307\u793a\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const stakeInstruction = createStakingInstruction(\n      walletAdapter.publicKey,\n      nftTokenAccount,\n      nftData.mint.address,\n      nftData.edition.address,\n      TOKEN_PROGRAM_ID, // \u9700\u8981\u5bfc\u5165\n      METADATA_PROGRAM_ID, // \u9700\u8981\u5bfc\u5165\n      PROGRAM_ID // \u9700\u8981\u4ececonstants.ts\u5bfc\u5165\n    )\n")),(0,o.kt)("p",null,"\u56e0\u6b64\uff0c\u8fdb\u5165 ",(0,o.kt)("inlineCode",{parentName:"p"},"utils")," \u6587\u4ef6\u5939\uff0c\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"constants.ts")," \u7684\u6587\u4ef6\uff0c\u5e76\u52a0\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { PublicKey } from "@solana/web3.js"\n\nexport const PROGRAM_ID = new PublicKey(\n  process.env.NEXT_PUBLIC_STAKE_PROGRAM_ID ?? ""\n)\n')),(0,o.kt)("p",null,"\u8fd9\u662f\u6211\u4eec\u5728\u4e0a\u8ff0\u6307\u793a\u4e2d\u4f7f\u7528\u7684\u7a0b\u5e8f",(0,o.kt)("inlineCode",{parentName:"p"},"ID"),"\u3002\u786e\u4fdd\u4f60\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"env.local"),"\u6587\u4ef6\u4e2d\u6709\u6b63\u786e\u7684\u7a0b\u5e8f",(0,o.kt)("inlineCode",{parentName:"p"},"ID"),"\u3002"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"stake")," \u6307\u4ee4\u5e94\u8be5\u51c6\u5907\u5c31\u7eea\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u521b\u5efa\u4e00\u7b14\u4ea4\u6613\uff0c\u6dfb\u52a0\u6307\u4ee4\uff0c\u7136\u540e\u53d1\u9001\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const transaction = new Transaction().add(stakeInstruction)\n\nconst signature = await walletAdapter.sendTransaction(transaction, connection)\n")),(0,o.kt)("p",null,"\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u7b49\u5f85\u64cd\u4f5c\uff0c\u786e\u4fdd\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"handleStake")," \u56de\u8c03\u4e2d\u6dfb\u52a0 ",(0,o.kt)("inlineCode",{parentName:"p"},"async")," \u5173\u952e\u5b57\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e09\u4e2a\u51fd\u6570\u90fd\u5e94\u8be5\u662f\u5f02\u6b65\u56de\u8c03\u51fd\u6570\u3002"),(0,o.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u68c0\u67e5\u4ee5\u786e\u8ba4\u662f\u5426\u5df2\u5b8c\u6210\uff0c\u56e0\u6b64\u8ba9\u6211\u4eec\u83b7\u53d6\u6700\u65b0\u7684\u533a\u5757\u54c8\u5e0c\u5e76\u786e\u8ba4\u4ea4\u6613\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const latestBlockhash = await connection.getLatestBlockhash()\n\nawait connection.confirmTransaction(\n          {\n            blockhash: latestBlockhash.blockhash,\n            lastValidBlockHeight: latestBlockhash.lastValidBlockHeight,\n            signature: signature,\n          },\n          "finalized"\n        )\n      } catch (error) {\n        console.log(error)\n      }\n\nawait checkStakingStatus()\n')),(0,o.kt)("p",null,"\u786e\u8ba4\u4ea4\u6613\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u67e5\u662f\u5426\u4ecd\u5728\u8d28\u62bc\uff0c\u56e0\u6b64\u8ba9\u6211\u4eec\u5c06\u6b64\u529f\u80fd\u6dfb\u52a0\u5230 ",(0,o.kt)("inlineCode",{parentName:"p"},"handleStake")," \u4ee3\u7801\u5757\u7684\u9876\u90e8\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const checkStakingStatus = useCallback(async () => {\n    if (!walletAdapter.publicKey || !nftTokenAccount) {\n      return\n    }\n")),(0,o.kt)("p",null,"\u6211\u4eec\u8fd8\u9700\u8981\u5c06 ",(0,o.kt)("inlineCode",{parentName:"p"},"walletAdapter")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"connection")," \u6dfb\u52a0\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"handleStake")," \u56de\u8c03\u7684\u4f9d\u8d56\u9879\u3002"),(0,o.kt)("p",null,"\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u4e00\u4e9b\u72b6\u6001\u5b57\u6bb5\uff0c\u6240\u4ee5\u5411\u4e0a\u6eda\u52a8\u5e76\u6dfb\u52a0\u8d28\u62bc\u72b6\u6001\u7684\u76f8\u5173\u5b57\u6bb5\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const [isStaking, setIsStaking] = useState(isStaked)\n")),(0,o.kt)("p",null,"\u6211\u4eec\u8fd8\u8981\u5c06\u53c2\u6570 ",(0,o.kt)("inlineCode",{parentName:"p"},"StakeOptionsDisplay")," \u4ece ",(0,o.kt)("inlineCode",{parentName:"p"},"isStaking")," \u6539\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"isStaked"),"\uff0c\u5426\u5219\u6211\u4eec\u7684\u72b6\u6001\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002"),(0,o.kt)("p",null,"\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"utils")," \u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"accounts.ts")," \u7684\u65b0\u6587\u4ef6\uff0c\u5e76\u4ece\u6211\u4eec\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"NFT"),"\u8d28\u62bc\u7a0b\u5e8f",(0,o.kt)("inlineCode",{parentName:"p"},"utils"),"\u6587\u4ef6\u5939\u4e2d\u590d\u5236\u6587\u4ef6\u8fc7\u6765\u3002\u53ef\u80fd\u8fd8\u9700\u8981\u5b89\u88c5\u6211\u4eec\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"borsh"),"\u5e93\u3002"),(0,o.kt)("p",null,"\u6211\u4eec\u4e4b\u6240\u4ee5\u8981\u590d\u5236\u8fd9\u4e9b\u5185\u5bb9\uff0c\u662f\u56e0\u4e3a\u6bcf\u6b21\u68c0\u67e5\u72b6\u6001\u65f6\uff0c\u6211\u4eec\u90fd\u8981\u67e5\u770b\u62b5\u62bc\u8d26\u6237\u7684\u72b6\u6001\uff0c\u5e76\u786e\u8ba4\u62b5\u62bc\u7684\u4ef7\u503c\u3002"),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\uff0c\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"checkStakingStatus")," \u7684\u56de\u8c03\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u8981\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"getStakeAccount"),"\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const account = await getStakeAccount(\n        connection,\n        walletAdapter.publicKey,\n        nftTokenAccount\n      )\n\nsetIsStaking(account.state === 0)\n    } catch (e) {\n      console.log("error:", e)\n    }\n')),(0,o.kt)("p",null,"\u65e2\u7136\u6211\u4eec\u8981\u53d1\u9001\u591a\u4e2a\u4ea4\u6613\uff0c\u8bf7\u7ee7\u7eed\u8bbe\u7f6e\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\u6765\u786e\u8ba4\u6211\u4eec\u7684\u4ea4\u6613\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u4ee3\u7801\u7c98\u8d34\u8fdb\u53bb\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const sendAndConfirmTransaction = useCallback(\n    async (transaction: Transaction) => {\n      try {\n            const signature = await walletAdapter.sendTransaction(\n              transaction,\n              connection\n            )\n            const latestBlockhash = await connection.getLatestBlockhash()\n            await connection.confirmTransaction(\n              {\n                blockhash: latestBlockhash.blockhash,\n                lastValidBlockHeight: latestBlockhash.lastValidBlockHeight,\n                signature: signature,\n              },\n              "finalized"\n            )\n          } catch (error) {\n            console.log(error)\n          }\n\n          await checkStakingStatus()\n    },\n    [walletAdapter, connection]\n  )\n')),(0,o.kt)("p",null,"\u73b0\u5728\uff0c\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"handleStake")," \u51fd\u6570\u4e2d\u53ea\u9700\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"sendAndConfirmTransaction")," \u5373\u53ef\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u524d\u7aef\u7d22\u8d54/\u5151\u6362")),(0,o.kt)("p",null,"\u73b0\u5728\u5c31\u53ef\u4ee5\u8fdb\u884c\u89e3\u9664\u8d28\u62bc\u548c\u9886\u53d6\u5956\u52b1\u4e86\u3002\u8fd9\u4e24\u8005\u5b9e\u9645\u4e0a\u662f\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u4e0d\u8fc7\u589e\u52a0\u4e86\u4e00\u4e2a\u590d\u6742\u7684\u73af\u8282\uff1a\u6211\u4eec\u662f\u5426\u9700\u8981\u4e3a\u7528\u6237\u521b\u5efa\u4ee3\u5e01\u8d26\u6237\uff0c\u7528\u4e8e\u5b58\u653e\u4ed6\u4eec\u5373\u5c06\u83b7\u5f97\u7684\u5956\u52b1\u4ee3\u5e01\u3002"),(0,o.kt)("p",null,"\u4e0b\u9762\u6211\u4eec\u5c06\u89e3\u51b3 ",(0,o.kt)("inlineCode",{parentName:"p"},"handleClaim")," \u51fd\u6570\u3002"),(0,o.kt)("p",null,"\u9996\u5148\uff0c\u4f7f\u7528\u4e0e\u4e4b\u524d\u76f8\u540c\u7684\u8b66\u62a5\u68c0\u67e5\u94b1\u5305\u9002\u914d\u5668\u662f\u5426\u5df2\u8fde\u63a5\u5e76\u5177\u6709\u516c\u94a5\u3002"),(0,o.kt)("p",null,"\u63a5\u7740\u6211\u4eec\u8981\u68c0\u67e5\u5956\u52b1\u7684\u5173\u8054\u4ee4\u724c\u8d26\u6237\u662f\u5426\u5b58\u5728\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const userStakeATA = await getAssociatedTokenAddress(\n      STAKE_MINT,\n      walletAdapter.publicKey\n    )\n")),(0,o.kt)("p",null,"\u8bf7\u5feb\u901f\u67e5\u770b\u6211\u4eec\u521b\u5efa\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"constants.ts")," \u6587\u4ef6\uff0c\u5e76\u4e3a\u8584\u8377\u5730\u5740\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981 ",(0,o.kt)("inlineCode",{parentName:"p"},"STAKE_MINT")," \u7684\u503c\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'export const STAKE_MINT = new PublicKey(\n  process.env.NEXT_PUBLIC_STAKE_MINT_ADDRESS ?? ""\n)\n')),(0,o.kt)("p",null,"\u5f53\u6211\u4eec\u62e5\u6709\u4e86",(0,o.kt)("inlineCode",{parentName:"p"},"ATA"),"\u540e\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"getAccountInfo")," \u51fd\u6570\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u8d26\u6237\u6216",(0,o.kt)("inlineCode",{parentName:"p"},"null"),"\uff1a"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"const account = await connection.getAccountInfo(userStakeATA)")),(0,o.kt)("p",null,"\u968f\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4ea4\u6613\u5e76\u68c0\u67e5\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u8d26\u6237\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"createAssociatedTokenAccountInstruction")," \u51fd\u6570\uff1b\u5426\u5219\uff0c\u6211\u4eec\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"createRedeemInstruction")," \u51fd\u6570\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const transaction = new Transaction()\n\n    if (!account) {\n      transaction.add(\n        createAssociatedTokenAccountInstruction(\n          walletAdapter.publicKey,\n          userStakeATA,\n          walletAdapter.publicKey,\n          STAKE_MINT\n        )\n      )\n    }\n\n    transaction.add(\n      createRedeemInstruction(\n        walletAdapter.publicKey,\n        nftTokenAccount,\n        nftData.mint.address,\n        userStakeATA,\n        TOKEN_PROGRAM_ID,\n        PROGRAM_ID\n      )\n    )\n")),(0,o.kt)("p",null,"\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u4e0a\u9762\u521b\u5efa\u7684\u8f85\u52a9\u4e8b\u52a1\u786e\u8ba4\u51fd\u6570\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"await sendAndConfirmTransaction(transaction)\n  }, [walletAdapter, connection, nftData, nftTokenAccount])\n")),(0,o.kt)("p",null,"\u6700\u540e\uff0c\u522b\u5fd8\u4e86\u5c06\u4f9d\u8d56\u9879 ",(0,o.kt)("inlineCode",{parentName:"p"},"walletAdapter")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"connection")," \u6dfb\u52a0\u5230\u56de\u8c03\u51fd\u6570\u4e2d\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u524d\u7aef\u89e3\u9664\u8d28\u62bc\u64cd\u4f5c")),(0,o.kt)("p",null,"\u5bf9\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"handleUnstake")," \u51fd\u6570\uff0c\u6211\u4eec\u8981\u786e\u4fdd\u4e0e\u5176\u4ed6\u51fd\u6570\u4e00\u6837\u4f7f\u7528\u5f02\u6b65\u5904\u7406\u3002\u4f60\u53ef\u4ee5\u76f4\u63a5\u4ece ",(0,o.kt)("inlineCode",{parentName:"p"},"handleClaim")," \u590d\u5236\u4ee5\u4e0b\u5185\u5bb9\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'if (\n      !walletAdapter.connected ||\n      !walletAdapter.publicKey ||\n      !nftTokenAccount\n    ) {\n      alert("\u8bf7\u8fde\u63a5\u60a8\u7684\u94b1\u5305")\n      return\n    }\n\n    const userStakeATA = await getAssociatedTokenAddress(\n      STAKE_MINT,\n      walletAdapter.publicKey\n    )\n\n    const account = await connection.getAccountInfo(userStakeATA)\n\n    const transaction = new Transaction()\n\n    if (!account) {\n      transaction.add(\n        createAssociatedTokenAccountInstruction(\n          walletAdapter.publicKey,\n          userStakeATA,\n          walletAdapter.publicKey,\n          STAKE_MINT\n        )\n      )\n    }\n')),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5411\u4ea4\u6613\u4e2d\u6dfb\u52a0\u6307\u4ee4\uff0c\u5e76\u518d\u6b21\u8c03\u7528\u8f85\u52a9\u51fd\u6570\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"transaction.add(\n      createUnstakeInstruction(\n        walletAdapter.publicKey,\n        nftTokenAccount,\n        nftData.address,\n        nftData.edition.address,\n        STAKE_MINT,\n        userStakeATA,\n        TOKEN_PROGRAM_ID,\n        METADATA_PROGRAM_ID,\n        PROGRAM_ID\n      )\n    )\n\n    await sendAndConfirmTransaction(transaction)\n  }\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u9875\u9762\u7f16\u8f91\u7684\u80a1\u4efd\u90e8\u5206")),(0,o.kt)("p",null,"\u6211\u4eec\u7ee7\u7eed\u8f6c\u5230 ",(0,o.kt)("inlineCode",{parentName:"p"},"stake.tsx")," \u6587\u4ef6\uff08\u4f4d\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"//pages/stake.tsx"),"\uff09\u5e76\u8fdb\u884c\u4e00\u4e9b\u4e0e\u4e0a\u8ff0\u5185\u5bb9\u76f8\u5173\u7684\u4fee\u6539\u3002"),(0,o.kt)("p",null,"\u9996\u5148\uff0c\u6839\u636e\u6211\u4eec\u4e4b\u524d\u7684\u7f16\u8f91\uff0c\u6211\u4eec\u9700\u8981\u5c06 ",(0,o.kt)("inlineCode",{parentName:"p"},"isStaking")," \u7684\u4f7f\u7528\u66f4\u6539\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"isStaked"),"\u3002\u8fd9\u9879\u4fee\u6539\u5e94\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"<StakeOptionsDisplay>")," \u7ec4\u4ef6\u4e2d\u8fdb\u884c\u3002\u6211\u4eec\u8fd8\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"nftData")," \u7684\u5b57\u6bb5\uff0c\u5e76\u5c06\u5176\u8d4b\u503c\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"nftData"),"\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u72b6\u6001\u6765\u5b58\u50a8\u8fd9\u4e2a\u503c\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const [nftData, setNftData] = useState<any>()`\n")),(0,o.kt)("p",null,"\u76ee\u524d\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u5b9e\u9645\u7684\u6570\u636e\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"useEffect")," \u94a9\u5b50\uff0c\u5728\u5176\u4e2d\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"metaplex"),"\uff0c\u5e76\u901a\u8fc7\u94f8\u5e01\u5730\u5740\u627e\u5230 ",(0,o.kt)("inlineCode",{parentName:"p"},"NFT")," \u6570\u636e\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'useEffect(() => {\n    const metaplex = Metaplex.make(connection).use(\n      walletAdapterIdentity(walletAdapter)\n    )\n\n    try {\n      metaplex\n        .nfts()\n        .findByMint({ mintAddress: mint })\n        .then((nft) => {\n          console.log("\u5728\u8d28\u62bc\u9875\u9762\u4e0a\u7684 NFT \u6570\u636e:", nft)\n          setNftData(nft)\n        })\n    } catch (e) {\n      console.log("\u83b7\u53d6 NFT \u65f6\u53d1\u751f\u9519\u8bef:", e)\n    }\n  }, [connection, walletAdapter])\n')),(0,o.kt)("p",null,"\u4e0d\u8981\u5fd8\u4e86\u50cf\u6211\u4eec\u4e4b\u524d\u6240\u505a\u7684\u90a3\u6837\uff0c\u83b7\u53d6\u4e00\u4e2a\u8fde\u63a5\u548c\u94b1\u5305\u9002\u914d\u5668\u3002"),(0,o.kt)("p",null,"\u73b0\u5728\u4e00\u5207\u51c6\u5907\u5c31\u7eea\uff0c\u53ef\u4ee5\u8fdb\u884c\u6d4b\u8bd5\u4e86\u3002\u8fd0\u884c ",(0,o.kt)("inlineCode",{parentName:"p"},"npm run dev"),"\uff0c\u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u672c\u5730\u4e3b\u673a\u3002\u8d76\u5feb\u8bd5\u8bd5\uff0c\u70b9\u51fb\u6309\u94ae\u5427\uff01\ud83d\udd18 \u23cf\ufe0f \ud83c\udd92"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u8fd8\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u7f16\u8f91")),(0,o.kt)("p",null,"\u4f3c\u4e4e\u8fd8\u6709\u51e0\u4e2a\u65b9\u9762\u53ef\u80fd\u9700\u8981\u6539\u8fdb\u3002\u8ba9\u6211\u4eec\u56de\u5230 ",(0,o.kt)("inlineCode",{parentName:"p"},"StakeOptionsDisplay")," \u6587\u4ef6\uff0c\u5e76\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"handleStake")," \u51fd\u6570\u4e4b\u524d\u6dfb\u52a0\u4ee5\u4e0b\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"useEffect")," \u94a9\u5b50\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"useEffect(() => {\n    checkStakingStatus()\n\n    if (nftData) {\n      connection\n        .getTokenLargestAccounts(nftData.mint.address)\n        .then((accounts) => setNftTokenAccount(accounts.value[0].address))\n    }\n  }, [nftData, walletAdapter, connection])\n")),(0,o.kt)("p",null,"\u8fd9\u662f\u4e00\u4e2a\u5feb\u901f\u68c0\u67e5\uff0c\u786e\u8ba4\u6211\u4eec\u662f\u5426\u6709 ",(0,o.kt)("inlineCode",{parentName:"p"},"NFT")," \u6570\u636e\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff0c\u5c31\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"NFT")," \u4ee3\u5e01\u8d26\u6237\u8bbe\u7f6e\u503c\u3002\u8fd9\u662f\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"NFT"),"\uff0c\u53ea\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5\u5b83\u4f1a\u662f\u7b2c\u4e00\u4e2a\u5730\u5740\uff0c\u56e0\u6b64\u7d22\u5f15\u503c\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"'0'"),"\u3002"),(0,o.kt)("p",null,"\u6b64\u5916\uff0c\u5728\u6240\u6709\u4e09\u4e2a\u56de\u8c03\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06 ",(0,o.kt)("inlineCode",{parentName:"p"},"nftData")," \u6dfb\u52a0\u4e3a\u4f9d\u8d56\u9879\u3002"),(0,o.kt)("p",null,"\u6700\u540e\uff0c\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"handleStake")," \u4e2d\uff0c\u5728\u521b\u5efa\u4ea4\u6613\u4e4b\u524d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const [stakeAccount] = PublicKey.findProgramAddressSync(\n      [walletAdapter.publicKey.toBuffer(), nftTokenAccount.toBuffer()],\n      PROGRAM_ID\n    )\n\nconst transaction = new Transaction()\n\nconst account = await connection.getAccountInfo(stakeAccount)\n    if (!account) {\n      transaction.add(\n        createInitializeStakeAccountInstruction(\n          walletAdapter.publicKey,\n          nftTokenAccount,\n          PROGRAM_ID\n        )\n      )\n    }\n")),(0,o.kt)("p",null,"\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u8d28\u62bc\u8d26\u6237\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u7a0b\u5e8f\u9a71\u52a8\u7684\u8d26\u6237\uff08",(0,o.kt)("inlineCode",{parentName:"p"},"PDA"),"\uff09\uff0c\u7528\u4e8e\u5728\u7a0b\u5e8f\u4e2d\u5b58\u50a8\u6709\u5173\u4f60\u7684\u8d28\u62bc\u72b6\u6001\u7684\u6570\u636e\u3002\u5982\u679c\u6211\u4eec\u6ca1\u6709\u8fd9\u6837\u7684\u8d26\u6237\uff0c\u4e0a\u8ff0\u4ee3\u7801\u4f1a\u4e3a\u6211\u4eec\u521d\u59cb\u5316\u5b83\u3002"),(0,o.kt)("p",null,"\u7ec8\u4e8e\uff0c\u6211\u4eec\u5b8c\u6210\u4e86\u6838\u5fc3\u90e8\u5206 ",(0,o.kt)("inlineCode",{parentName:"p"},"4"),"\u3002\u8fd9\u6700\u540e\u7684\u90e8\u5206\u6709\u4e9b\u6742\u4e71\uff0c\u4e3a\u786e\u4fdd\u6ca1\u6709\u9057\u6f0f\u4efb\u4f55\u4e1c\u897f\uff0c\u53ef\u4ee5\u5c06\u6574\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"StakeOptionsDisplay")," \u6587\u4ef6\u7c98\u8d34\u4e0b\u6765\u8fdb\u884c\u4ed4\u7ec6\u68c0\u67e5\u3002"),(0,o.kt)("p",null,"\u5982\u679c\u4f60\u60f3\u8fdb\u4e00\u6b65\u6539\u8fdb\u4ee3\u7801\u6216\u6709\u4efb\u4f55\u5176\u4ed6\u95ee\u9898\uff0c\u8bf7\u968f\u65f6\u63d0\u51fa\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { VStack, Text, Button } from "@chakra-ui/react"\nimport { useConnection, useWallet } from "@solana/wallet-adapter-react"\nimport { PublicKey, Transaction } from "@solana/web3.js"\nimport { useCallback, useEffect, useState } from "react"\nimport {\n  createInitializeStakeAccountInstruction,\n  createRedeemInstruction,\n  createStakingInstruction,\n  createUnstakeInstruction,\n} from "../utils/instructions"\nimport {\n  TOKEN_PROGRAM_ID,\n  getAssociatedTokenAddress,\n  createAssociatedTokenAccountInstruction,\n} from "@solana/spl-token"\nimport { PROGRAM_ID as METADATA_PROGRAM_ID } from "@metaplex-foundation/mpl-token-metadata"\nimport { PROGRAM_ID, STAKE_MINT } from "../utils/constants"\nimport { getStakeAccount } from "../utils/accounts"\n\nexport const StakeOptionsDisplay = ({\n  nftData,\n  isStaked,\n  daysStaked,\n  totalEarned,\n  claimable,\n}: {\n  nftData: any\n  isStaked: boolean\n  daysStaked: number\n  totalEarned: number\n  claimable: number\n}) => {\n  const walletAdapter = useWallet()\n  const { connection } = useConnection()\n\n  const [isStaking, setIsStaking] = useState(isStaked)\n  const [nftTokenAccount, setNftTokenAccount] = useState<PublicKey>()\n\n  const checkStakingStatus = useCallback(async () => {\n    if (!walletAdapter.publicKey || !nftTokenAccount) {\n      return\n    }\n\n    try {\n      const account = await getStakeAccount(\n        connection,\n        walletAdapter.publicKey,\n        nftTokenAccount\n      )\n\n      console.log("stake account:", account)\n\n      setIsStaking(account.state === 0)\n    } catch (e) {\n      console.log("error:", e)\n    }\n  }, [walletAdapter, connection, nftTokenAccount])\n\n  useEffect(() => {\n    checkStakingStatus()\n\n    if (nftData) {\n      connection\n        .getTokenLargestAccounts(nftData.mint.address)\n        .then((accounts) => setNftTokenAccount(accounts.value[0].address))\n    }\n  }, [nftData, walletAdapter, connection])\n\n  const handleStake = useCallback(async () => {\n    if (\n      !walletAdapter.connected ||\n      !walletAdapter.publicKey ||\n      !nftTokenAccount\n    ) {\n      alert("Please connect your wallet")\n      return\n    }\n\n    const [stakeAccount] = PublicKey.findProgramAddressSync(\n      [walletAdapter.publicKey.toBuffer(), nftTokenAccount.toBuffer()],\n      PROGRAM_ID\n    )\n\n    const transaction = new Transaction()\n\n    const account = await connection.getAccountInfo(stakeAccount)\n    if (!account) {\n      transaction.add(\n        createInitializeStakeAccountInstruction(\n          walletAdapter.publicKey,\n          nftTokenAccount,\n          PROGRAM_ID\n        )\n      )\n    }\n\n    const stakeInstruction = createStakingInstruction(\n      walletAdapter.publicKey,\n      nftTokenAccount,\n      nftData.mint.address,\n      nftData.edition.address,\n      TOKEN_PROGRAM_ID,\n      METADATA_PROGRAM_ID,\n      PROGRAM_ID\n    )\n\n    transaction.add(stakeInstruction)\n\n    await sendAndConfirmTransaction(transaction)\n  }, [walletAdapter, connection, nftData, nftTokenAccount])\n\n  const sendAndConfirmTransaction = useCallback(\n    async (transaction: Transaction) => {\n      try {\n        const signature = await walletAdapter.sendTransaction(\n          transaction,\n          connection\n        )\n        const latestBlockhash = await connection.getLatestBlockhash()\n        await connection.confirmTransaction(\n          {\n            blockhash: latestBlockhash.blockhash,\n            lastValidBlockHeight: latestBlockhash.lastValidBlockHeight,\n            signature: signature,\n          },\n          "finalized"\n        )\n      } catch (error) {\n        console.log(error)\n      }\n\n      await checkStakingStatus()\n    },\n    [walletAdapter, connection]\n  )\n\n  const handleUnstake = useCallback(async () => {\n    if (\n      !walletAdapter.connected ||\n      !walletAdapter.publicKey ||\n      !nftTokenAccount\n    ) {\n      alert("Please connect your wallet")\n      return\n    }\n\n    const userStakeATA = await getAssociatedTokenAddress(\n      STAKE_MINT,\n      walletAdapter.publicKey\n    )\n\n    const account = await connection.getAccountInfo(userStakeATA)\n\n    const transaction = new Transaction()\n\n    if (!account) {\n      transaction.add(\n        createAssociatedTokenAccountInstruction(\n          walletAdapter.publicKey,\n          userStakeATA,\n          walletAdapter.publicKey,\n          STAKE_MINT\n        )\n      )\n    }\n\n    transaction.add(\n      createUnstakeInstruction(\n        walletAdapter.publicKey,\n        nftTokenAccount,\n        nftData.address,\n        nftData.edition.address,\n        STAKE_MINT,\n        userStakeATA,\n        TOKEN_PROGRAM_ID,\n        METADATA_PROGRAM_ID,\n        PROGRAM_ID\n      )\n    )\n\n    await sendAndConfirmTransaction(transaction)\n  }, [walletAdapter, connection, nftData, nftTokenAccount])\n\n  const handleClaim = useCallback(async () => {\n    if (\n      !walletAdapter.connected ||\n      !walletAdapter.publicKey ||\n      !nftTokenAccount\n    ) {\n      alert("Please connect your wallet")\n      return\n    }\n\n    const userStakeATA = await getAssociatedTokenAddress(\n      STAKE_MINT,\n      walletAdapter.publicKey\n    )\n\n    const account = await connection.getAccountInfo(userStakeATA)\n\n    const transaction = new Transaction()\n\n    if (!account) {\n      transaction.add(\n        createAssociatedTokenAccountInstruction(\n          walletAdapter.publicKey,\n          userStakeATA,\n          walletAdapter.publicKey,\n          STAKE_MINT\n        )\n      )\n    }\n\n    transaction.add(\n      createRedeemInstruction(\n        walletAdapter.publicKey,\n        nftTokenAccount,\n        nftData.mint.address,\n        userStakeATA,\n        TOKEN_PROGRAM_ID,\n        PROGRAM_ID\n      )\n    )\n\n    await sendAndConfirmTransaction(transaction)\n  }, [walletAdapter, connection, nftData, nftTokenAccount])\n\n  return (\n    <VStack\n      bgColor="containerBg"\n      borderRadius="20px"\n      padding="20px 40px"\n      spacing={5}\n    >\n      <Text\n        bgColor="containerBgSecondary"\n        padding="4px 8px"\n        borderRadius="20px"\n        color="bodyText"\n        as="b"\n        fontSize="sm"\n      >\n        {isStaking\n          ? `STAKING ${daysStaked} DAY${daysStaked === 1 ? "" : "S"}`\n          : "READY TO STAKE"}\n      </Text>\n      <VStack spacing={-1}>\n        <Text color="white" as="b" fontSize="4xl">\n          {isStaking ? `${totalEarned} $BLD` : "0 $BLD"}\n        </Text>\n        <Text color="bodyText">\n          {isStaking ? `${claimable} $BLD earned` : "earn $BLD by staking"}\n        </Text>\n      </VStack>\n      <Button\n        onClick={isStaking ? handleClaim : handleStake}\n        bgColor="buttonGreen"\n        width="200px"\n      >\n        <Text as="b">{isStaking ? "claim $BLD" : "stake buildoor"}</Text>\n      </Button>\n      {isStaking ? <Button onClick={handleUnstake}>unstake</Button> : null}\n    </VStack>\n  )\n}\n')))}d.isMDXComponent=!0}}]);